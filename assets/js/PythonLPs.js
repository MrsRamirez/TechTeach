const PYTHON_LESSON_PLANS = [
  {
    "day": "Day 1",
    "date": "Sep 4, 2025",
    "unit": "Your Best & Brightest Futures Lesson 0",
    "lesson": "Intro to Your Best and Brightest Futures",
    "enduringUnderstanding": "Who is computer science for, and how can my personal interests, passions, and experiences shape my journey in CS? Aim: To help students understand that computer science can and should be used by everyone, even in non-technical fields, and to start thinking about their unique path in learning about computer science.",
    "learningObjectives": "Recognize that computer science is for everyone and that diversity in computer science helps build solutions that meet the needs of diverse people and our world. Describe how computer science and technology impact non-technology careers. Recognize how they interact with and are impacted by computer science on a daily basis. Explain how their interests, passions, and experiences might shape their journey with computer science.",
    "standards": "",
    "agenda": "~45 min+. Overview (5 min), Computer Science is Everywhere (6 min), Discuss (5 min), Computer Science and You (3 min), Computer Science and You: Diversity (3 min), Activity: Your Computer Science Journey (Introduction - 3 min, Exploration - 15 min), Wrap Up (5 min), Survey Questions (Remaining Time), Keep it Going (Remaining Time)",
    "teacherMaterials": "Lesson Slides. Video: Computer Science is Changing Everything (Teacher plays)",
    "studentMaterials": "Lesson Slides. Video: Computer Science is Changing Everything. Student Survey",
    "links": "Lesson Slides, Video: Computer Science Is Changing Everything, Student Survey",
    "formativeAssessment": "Pose reflection questions to get students thinking. Prompt discussion questions (e.g., \"Who has heard of the term computer science?\", \"What does 'computer science' make you think of?\", \"How do you think learning computer science can impact your own journey?\"). Circulate to guide students, ensure engagement with tasks",
    "summativeAssessment": "No specific summative assessment mentioned for this introductory lesson.",
    "differentiation": "Aim for students to recognize CS for everyone. Emphasis on not needing prior CS or programming experience. Underscore inclusivity, empathy, and diversity; represent many voices. Encourage continuation outside class or exploration of career ideas."
  },
  {
    "day": "Day 2",
    "date": "Sep 5, 2025",
    "unit": "1",
    "lesson": "1.1 What is Computer Science?",
    "enduringUnderstanding": "You use computing devices all the time, but may not usually think about what makes them work. Computer science is the process behind the scenes that allows technology to do its job, used in many fields.",
    "learningObjectives": "Define computer science and coding. List the differences between natural language and formal language.",
    "standards": "3B-AP-24",
    "agenda": "Introduction to computer science concepts (15 min), Discussion on natural vs. formal languages (10 min), Activity: Identifying languages (10 min), Wrap-up and Q&A (10 min)",
    "teacherMaterials": "Lesson 1 slides (PDF). Whiteboard or chart paper.",
    "studentMaterials": "Lesson 1 slides (PDF).",
    "links": "Video Lesson. Lesson 1 slides (PDF). Link for more info on natural vs formal languages.",
    "formativeAssessment": "Lesson Practice questions. Forum for challenges and questions.",
    "summativeAssessment": "Unit 1 quiz, test, and coding assignment.",
    "differentiation": "Provide examples of formal and natural languages from different domains (e.g., recipes, legal documents, Python code)."
  },
  {
    "day": "Day 3",
    "date": "Sep 8, 2025",
    "unit": "1",
    "lesson": "1.2 Using Python",
    "enduringUnderstanding": "Now that you have an understanding of what computer science is, you'll learn how to write code in this course using the built-in programming environment.",
    "learningObjectives": "Define Integrated Development Environment. Create your first line of code.",
    "standards": "3A-AP-18",
    "agenda": "Introduction to the IDE (15 min), Guided practice: 'Hello, World!' program (15 min), Independent practice: Simple print statements (10 min), Sharing and reflection (5 min)",
    "teacherMaterials": "Projector, demonstration computer with the IDE.",
    "studentMaterials": "Lesson slides. Access to a computer with the course's IDE.",
    "links": "Video Lesson. Lesson slides. Student Guide to Programming in CS Python Fundamentals. Official Python website. Python language tutorial.",
    "formativeAssessment": "Lesson Practice questions. Code Practice questions.",
    "summativeAssessment": "Unit 1 quiz, test, and coding assignment.",
    "differentiation": "Provide a cheat sheet of common Python commands for students who need extra support."
  },
  {
    "day": "Day 4",
    "date": "Sep 9, 2025",
    "unit": "1",
    "lesson": "1.3 First Program",
    "enduringUnderstanding": "You will jump in and see how Python works, learning how to use the \"print\" command and understanding case sensitivity.",
    "learningObjectives": "Define output. Correctly utilize the print command. Create your first program.",
    "standards": "3A-AP-18",
    "agenda": "Review of print command (10 min), Introduction to case sensitivity (10 min), Paired programming activity: Creating a simple program (15 min), Debugging common errors (10 min)",
    "teacherMaterials": "Lesson 3 slides (PDF). Examples of code with and without case sensitivity errors.",
    "studentMaterials": "Lesson 3 slides (PDF).",
    "links": "Video Lesson. Lesson 3 slides (PDF). Python website documentation on print command. Short video refresher for code practice.",
    "formativeAssessment": "Code Practice questions (Q1, Q2, Q3).",
    "summativeAssessment": "Unit 1 quiz, test, and coding assignment.",
    "differentiation": "Hint for Q2: use two print commands for two lines of text. Hint for Q3: copying/pasting helps ensure accurate spacing."
  },
  {
    "day": "Day 5",
    "date": "Sep 10, 2025",
    "unit": "1",
    "lesson": "1.4 Hardware and Software",
    "enduringUnderstanding": "We will investigate the parts of a computing device that allow it to function, and what makes something a computing device.",
    "learningObjectives": "Define hardware. Define software. Define programs. List the parts of the computer. List types of software.",
    "standards": "3A-CS-02",
    "agenda": "Introduction to hardware and software (15 min), Group activity: Sorting components into hardware and software (15 min), Discussion on the relationship between hardware, software, and programs (10 min), Wrap-up (5 min)",
    "teacherMaterials": "Lesson 4 slides (PDF). Images or physical examples of computer hardware.",
    "studentMaterials": "Lesson 4 slides (PDF).",
    "links": "Video Lesson. Lesson 4 slides (PDF). Video on computer architecture. Video on hardware/software components. Short video refresher for code practice.",
    "formativeAssessment": "Code Practice questions (Q1, Q2).",
    "summativeAssessment": "Unit 1 quiz, test, and coding assignment.",
    "differentiation": "Hint for Q1 & Q2: copying/pasting helps ensure accurate spacing."
  },
  {
    "day": "Day 6",
    "date": "Sep 11, 2025",
    "unit": "1",
    "lesson": "1.5 Output",
    "enduringUnderstanding": "Understand how computers send messages out to the user and introduce new programming commands for this.",
    "learningObjectives": "Define and utilize comments. Define and utilize escape characters. Define and utilize special characters. Explain output.",
    "standards": "3A-AP-18",
    "agenda": "Introduction to comments and escape characters (15 min), Guided practice: Using special characters in print statements (15 min), Independent practice: Creating formatted output (10 min), Peer review of code (5 min)",
    "teacherMaterials": "Lesson 5 slides (PDF).",
    "studentMaterials": "Lesson 5 slides (PDF).",
    "links": "Video Lesson. Lesson 5 slides (PDF). Site with real-time ASCII. Short video refresher for code practice.",
    "formativeAssessment": "Lesson Practice questions (Q1, Q2, Q3, Q4).",
    "summativeAssessment": "Unit 1 quiz, test, and coding assignment.",
    "differentiation": "Hint for Q1: use \\n and \\t for new lines/tabs. Hint for Q2, Q3, Q4: copying/pasting helps ensure accurate spacing/characters."
  },
  {
    "day": "Day 7",
    "date": "Sep 12, 2025",
    "unit": "1",
    "lesson": "1.6 Input",
    "enduringUnderstanding": "How can computers get information from the outside world? Learn about the input() function and how it takes user information for use in a program.",
    "learningObjectives": "Use the input() function to get information from the user. Distinguish between the int() and str() conversion functions.",
    "standards": "3B-AP-12",
    "agenda": "Introduction to the input() function (10 min), Data type conversion (int() vs. str()) (15 min), Coding activity: Simple interactive program (15 min), Sharing and troubleshooting (5 min)",
    "teacherMaterials": "PDF summary of lesson.",
    "studentMaterials": "PDF summary of lesson.",
    "links": "Video Lesson. PDF summary of lesson. Short video refresher for code practice.",
    "formativeAssessment": "Code Practice questions (Q1, Q2).",
    "summativeAssessment": "Unit 1 quiz, test, and coding assignment.",
    "differentiation": "Hint for Q1, Q2: use + for concatenation; remember to add spaces/punctuation."
  },
  {
    "day": "Day 8",
    "date": "Sep 15, 2025",
    "unit": "1",
    "lesson": "1.7 Data Types and Variables",
    "enduringUnderstanding": "Learn how Python handles different types of data and variables, and how it stores that data.",
    "learningObjectives": "Define and utilize variables. Distinguish between the variable types of integer and string.",
    "standards": "3B-AP-12",
    "agenda": "Introduction to variables and data types (15 min), Practice: Declaring and using variables (15 min), Discussion: When to use integers vs. strings (10 min), Q&A (5 min)",
    "teacherMaterials": "Lesson 7 slides (PDF).",
    "studentMaterials": "Lesson 7 slides (PDF).",
    "links": "Video Lesson. Lesson 7 slides (PDF). Video on creating variables and assigning values. Video on coding basics and variables. Video on coding overview. Video on Python. Short video refresher for code practice.",
    "formativeAssessment": "Code Practice questions (Q1, Q2).",
    "summativeAssessment": "Unit 1 quiz, test, and coding assignment.",
    "differentiation": "Hint for Q1 & Q2: think about the data type of user input and how to convert it to a number."
  },
  {
    "day": "Day 9",
    "date": "Sep 16, 2025",
    "unit": "1",
    "lesson": "1.8 Analog vs. Digital",
    "enduringUnderstanding": "We will look at data and how computers process the data we input.",
    "learningObjectives": "Describe analog data. Describe digital data. Describe data compression.",
    "standards": "3A-DA-10",
    "agenda": "Introduction to analog and digital data (15 min), Activity: Comparing analog and digital representations (e.g., clocks, music) (15 min), Introduction to data compression (10 min), Discussion (5 min)",
    "teacherMaterials": "Lesson 8 slides (PDF). Examples of analog and digital devices.",
    "studentMaterials": "Lesson 8 slides (PDF).",
    "links": "Video Lesson. Lesson 8 slides (PDF). Detailed article on analog and digital technologies. Short video refresher for code practice.",
    "formativeAssessment": "Code Practice.",
    "summativeAssessment": "Unit 1 quiz, test, and coding assignment.",
    "differentiation": "Hints for Code Practice: run code and check output for clues; check variable assignments and spacing."
  },
  {
    "day": "Day 10",
    "date": "Sep 17, 2025",
    "unit": "1",
    "lesson": "1.9 Understanding Binary",
    "enduringUnderstanding": "How does a computer store information it receives? In this lesson, we'll explore binary code, the system that computers use to store information.",
    "learningObjectives": "Describe and define computer memory and binary code. Convert a number from decimal to binary representation.",
    "standards": "3A-DA-10",
    "agenda": "Introduction to binary (10 min), Activity: Decimal to binary conversion practice (20 min), Discussion: Why computers use binary (10 min), Wrap-up (5 min)",
    "teacherMaterials": "Lesson 9 slides (PDF). Binary conversion worksheets.",
    "studentMaterials": "Lesson 9 slides (PDF).",
    "links": "Video Lesson. Lesson 9 slides (PDF). Website on bits and bytes.",
    "formativeAssessment": "Unit 1 Vocabulary Practice (Quizlet). Unit 1 Test Review (PDF).",
    "summativeAssessment": "Assignment 1: Silly Sentences.",
    "differentiation": "Provide a number line or chart to help with decimal to binary conversion."
  },
  {
    "day": "Day 11",
    "date": "Sep 18, 2025",
    "unit": "Your Best & Brightest Futures Lesson 1",
    "lesson": "Why This Matters",
    "enduringUnderstanding": "We want to better understand how computer science and technology impact seemingly non-technical careers, consider computer science as a college and career choice, and explore this possible future life.",
    "learningObjectives": "Understand that computer science unlocks opportunities. Identify appropriate careers. Envision our future selves. Begin planning the journey.",
    "standards": "",
    "agenda": "Guest speaker or video presentation on CS in various careers (15 min), Self-reflection activity on future aspirations (10 min), Small group discussion: Connecting interests to CS (15 min), Goal setting (5 min)",
    "teacherMaterials": "Career profiles or guest speaker information.",
    "studentMaterials": "Career Choice Tracker (Doc).",
    "links": "Lesson slides. Videos: Computer Science and Me: Why I'm Here, Computer Science and Me: Opening New Possibilities. Student survey.",
    "formativeAssessment": "Journal entry on how CS could be relevant to their dream job.",
    "summativeAssessment": "A short presentation on a non-obvious career that uses computer science.",
    "differentiation": "Focus on college and career choice; reflection on career aspirations; exploration of career catalog."
  },
  {
    "day": "Day 12",
    "date": "Sep 19, 2025",
    "unit": "2",
    "lesson": "2.1 Computer History",
    "enduringUnderstanding": "Learn about the history of computers and explore how technology has evolved over time.",
    "learningObjectives": "Briefly describe the history of the computer.",
    "standards": "3A-CS-02",
    "agenda": "Timeline activity: Placing key events in computer history (20 min), Video presentation on pioneers in computing (15 min), Discussion: The impact of major inventions (10 min)",
    "teacherMaterials": "Lesson slides. Timeline materials (cards, poster board).",
    "studentMaterials": "Lesson slides.",
    "links": "Video Lesson. Lesson slides. Computer History Museum Timeline. Milestones of the Computer Revolution. Videos: False Dawn: The Babbage Engine, Voices Raised: Celebrating Women in STEM (Ada Lovelace, Jean Jennings Bartik), The Brilliant Mind of Ada Lovelace, The History of Women in Tech, Women Scientists Behind NASA's Greatest Achievements.",
    "formativeAssessment": "Exit ticket: Name one key figure in computer history and their contribution.",
    "summativeAssessment": "Unit 2 quiz, test, and coding assignment.",
    "differentiation": "Provide a partially filled-in timeline for students who need more scaffolding."
  },
  {
    "day": "Day 13",
    "date": "Sep 22, 2025",
    "unit": "2",
    "lesson": "2.2 Basic Calculations",
    "enduringUnderstanding": "Learn how Python handles number calculations, the rules for basic operations, how parentheses are used in Python, how to use exponents, and the order of operations.",
    "learningObjectives": "Define and utilize floats, operators and assignments. List the symbols for the basic operators and exponents. Perform the order of operations.",
    "standards": "3B-AP-12",
    "agenda": "Review of mathematical operators (10 min), Introduction to order of operations (PEMDAS) (15 min), Practice problems (15 min), Peer-checking of answers (5 min)",
    "teacherMaterials": "Lesson 2 slides (PDF).",
    "studentMaterials": "Lesson 2 slides (PDF).",
    "links": "Video Lesson. Lesson 2 slides (PDF). PDF summary of lesson. Practice problems for Order of Operations. Short video refresher for code practice.",
    "formativeAssessment": "Code Practice questions (Q1, Q2).",
    "summativeAssessment": "Unit 2 quiz, test, and coding assignment.",
    "differentiation": "Provide a mnemonic device for remembering the order of operations."
  },
  {
    "day": "Day 14",
    "date": "Sep 25, 2025",
    "unit": "2",
    "lesson": "2.3 Modular Division",
    "enduringUnderstanding": "Learn a new way to do division that focuses on the remainder after two numbers are divided.",
    "learningObjectives": "Define and utilize modular division.",
    "standards": "3B-AP-12",
    "agenda": "Introduction to modular division (10 min), Real-world examples (e.g., telling time) (10 min), Practice problems using the modulo operator (20 min), Discussion of use cases (5 min)",
    "teacherMaterials": "Lesson 3 slides (PDF).",
    "studentMaterials": "Lesson 3 slides (PDF).",
    "links": "Video Lesson. Lesson 3 slides (PDF). Detailed look at how modular division works. Short video refresher for code practice.",
    "formativeAssessment": "Code Practice questions (Q1, Q2).",
    "summativeAssessment": "Unit 2 quiz, test, and coding assignment.",
    "differentiation": "Hint for Q1: use int() to remove decimals from division, str() to combine with strings, and // for integer division. Hint for Q2: convert all inputs to feet first, then use regular and modular division to convert back to yards and feet."
  },
  {
    "day": "Day 15",
    "date": "Sep 26, 2025",
    "unit": "2",
    "lesson": "2.4 Built-in Functions",
    "enduringUnderstanding": "Functions are just collections of code that perform a simple task. In this lesson, we will look at how some basic functions in Python are used.",
    "learningObjectives": "Define and utilize import, functions, and modules. Calculate the square roots, absolute values, and power of numbers.",
    "standards": "3B-AP-14",
    "agenda": "Introduction to functions and modules (15 min), Demonstration of built-in math functions (15 min), Practice using functions in code (10 min), Q&A (5 min)",
    "teacherMaterials": "Lesson 4 slides (PDF).",
    "studentMaterials": "Lesson 4 slides (PDF).",
    "links": "Video Lesson. Lesson 4 slides (PDF). PDF summary of lesson. All available functions prepackaged in Python. Short video refresher for code practice.",
    "formativeAssessment": "Code Practice questions (Q1, Q2).",
    "summativeAssessment": "Unit 2 quiz, test, and coding assignment.",
    "differentiation": "Hint for Q1: make sure to change the final outcome to a string for printing. Hint for Q2: change final outcome to string."
  },
  {
    "day": "Day 16",
    "date": "Sep 29, 2025",
    "unit": "2",
    "lesson": "2.5 Random Numbers",
    "enduringUnderstanding": "Generating random numbers is a lot like rolling dice. In Python, you’re not limited to a fixed set of numbers or just numbers, but can use other values as well.",
    "learningObjectives": "Generate random numbers with the random functions.",
    "standards": "3A-AP-18",
    "agenda": "Introduction to the random module (10 min), Guided practice: Generating random integers and choices (15 min), Activity: Create a simple dice rolling simulator (15 min), Sharing and testing (5 min)",
    "teacherMaterials": "Lesson 5 slides (PDF).",
    "studentMaterials": "Lesson 5 slides (PDF).",
    "links": "Video Lesson. Lesson 5 slides (PDF). Random.org explanation of random numbers in everyday life. Video on creating a random number generator.",
    "formativeAssessment": "Code Practice.",
    "summativeAssessment": "Unit 2 quiz, test, and coding assignment.",
    "differentiation": "Challenge students to create a coin flip or rock-paper-scissors game."
  },
  {
    "day": "Day 17",
    "date": "Sep 30, 2025",
    "unit": "2",
    "lesson": "2.6 Big Data",
    "enduringUnderstanding": "Big Data are sets of data that are so large or complex that traditional data processing isn’t capable of dealing with them.",
    "learningObjectives": "Define big data in terms of size and as a concept. Explain why computers are needed to compute big data.",
    "standards": "3B-AP-15",
    "agenda": "Introduction to Big Data (15 min), Case studies of Big Data in action (e.g., social media, science) (15 min), Discussion on the challenges and opportunities of Big Data (10 min), Brainstorming session (5 min)",
    "teacherMaterials": "Lesson 6 slides (PDF).",
    "studentMaterials": "Lesson 6 slides (PDF).",
    "links": "Video Lesson. Lesson 6 slides (PDF). Jennifer Golbeck's TED talk on data mining.",
    "formativeAssessment": "Think-pair-share on examples of big data in their daily lives.",
    "summativeAssessment": "Unit 2 quiz, test, and coding assignment.",
    "differentiation": "Provide articles or videos at different reading/viewing levels about big data."
  },
  {
    "day": "Day 18",
    "date": "Oct 1, 2025",
    "unit": "2",
    "lesson": "2.7 Working With a Real Data Set",
    "enduringUnderstanding": "Now that we've learned how to do number calculations and basic functions, let's apply that knowledge to actual real-world data.",
    "learningObjectives": "Define and code max and min. Plot data and a real data set using the simpleplot module.",
    "standards": "3A-DA-11",
    "agenda": "Introduction to the dataset (10 min), Guided practice: Using max() and min() on the data (15 min), Introduction to the simpleplot module (10 min), Activity: Plotting the data (10 min)",
    "teacherMaterials": "Lesson 7 slides (PDF). A sample dataset file.",
    "studentMaterials": "Lesson 7 slides (PDF).",
    "links": "Video Lesson. Lesson 7 slides (PDF). Simpleplot Documentation. Site tracking marine animals. Google's self-driving car. Short video refresher for code practice.",
    "formativeAssessment": "Code Practice questions (Q1, Q2). Unit 2 Vocabulary Practice (Quizlet). Unit 2 Test Review (PDF).",
    "summativeAssessment": "Assignment 2: Room Area.",
    "differentiation": "Hint for Q1: numbers should be compared numerically, input transformed to integer but printed as string."
  },
  {
    "day": "Day 19",
    "date": "Oct 3, 2025",
    "unit": "Your Best & Brightest Futures Lesson 2",
    "lesson": "It Could Be Me",
    "enduringUnderstanding": "Consider how your post-secondary plans can support a future in computer science.",
    "learningObjectives": "Recognize college and career paths that meet your needs. Research colleges. Start to think about the application processes.",
    "standards": "",
    "agenda": "Panel discussion with college students in CS (or video interviews) (20 min), College research activity (20 min), Small group sharing of findings (5 min)",
    "teacherMaterials": "College research resources (websites, brochures).",
    "studentMaterials": "Rapid Response (Doc), Pre-Research Reflection (Doc), College Research Process (Doc), Tracker: Schools of Interest (Doc).",
    "links": "Lesson slides. Videos: Computer Science and Me: My College Path.",
    "formativeAssessment": "Students list three potential colleges and one reason they are interested in each.",
    "summativeAssessment": "A completed 'Tracker: Schools of Interest' document.",
    "differentiation": "Focus on college paths for computer science; examine steps for future planning; consider college fit and application process."
  },
    {
    "day": "Day 20",
    "date": "Oct 6, 2025",
    "unit": "3",
    "lesson": "3.1 Functions",
    "enduringUnderstanding": "We are going to talk a little bit more about functions, parameters and abstractions.",
    "learningObjectives": "Explain the purpose of functions. Define and understand abstraction. Understand the use of parameters.",
    "standards": "3A-AP-17",
    "agenda": "Review of built-in functions (10 min), Introduction to defining custom functions (15 min), Understanding parameters and abstraction (15 min), Q&A (5 min)",
    "teacherMaterials": "Lesson 1 slides (PDF).",
    "studentMaterials": "Lesson 1 slides (PDF).",
    "links": "Video Lesson. Lesson 1 slides (PDF). National Science Foundation newsletter on CS research.",
    "formativeAssessment": "Whiteboard activity: Decomposing a complex task into smaller functions.",
    "summativeAssessment": "Unit 3 quiz, test, and coding assignment.",
    "differentiation": "Use analogies like a recipe or a car engine to explain functions and abstraction."
  },
  {
    "day": "Day 21",
    "date": "Oct 7, 2025",
    "unit": "3",
    "lesson": "3.2 Simple Ifs",
    "enduringUnderstanding": "What happens when you use the \"if\" statement in your code? \"If\" acts as a gateway to further actions.",
    "learningObjectives": "Define and code if statements. List the symbols for different relational operators.",
    "standards": "3A-AP-18",
    "agenda": "Introduction to conditional logic and if statements (15 min), Relational operators (10 min), Coding practice with simple if statements (15 min), Debugging conditional statements (5 min)",
    "teacherMaterials": "Lesson 2 slides (PDF).",
    "studentMaterials": "Lesson 2 slides (PDF).",
    "links": "Video Lesson. Lesson 2 slides (PDF). Link to EarSketch account for script.",
    "formativeAssessment": "Code Practice questions (Q1, Q2, Q3).",
    "summativeAssessment": "Unit 3 quiz, test, and coding assignment.",
    "differentiation": "Hint for Q2: grades may be decimals."
  },
  {
    "day": "Day 22",
    "date": "Oct 8, 2025",
    "unit": "3",
    "lesson": "3.3 Logical Operators",
    "enduringUnderstanding": "What if we want to use more than one if statement at a time? Is there a way to combine two different test conditions?",
    "learningObjectives": "Understand and be able to use logical operators. Use logical operators to create boolean expressions.",
    "standards": "3A-AP-18",
    "agenda": "Introduction to logical operators (and, or, not) (15 min), Truth tables and boolean expressions (15 min), Coding practice with complex conditionals (10 min), Peer review (5 min)",
    "teacherMaterials": "Lesson 3 slides (PDF).",
    "studentMaterials": "Lesson 3 slides (PDF).",
    "links": "Video Lesson. Lesson 3 slides (PDF).",
    "formativeAssessment": "Code Practice questions (Q1, Q2).",
    "summativeAssessment": "Unit 3 quiz, test, and coding assignment.",
    "differentiation": "Hint for Q2: use at least one boolean operator in each answer."
  },
  {
    "day": "Day 23",
    "date": "Oct 9, 2025",
    "unit": "3",
    "lesson": "3.4 If – Else",
    "enduringUnderstanding": "It can be a burden to write a separate if statement when we are only trying to write code for when the initial statement fails. The if-else statement lets us write code for the failing scenario with ease.",
    "learningObjectives": "Define and code if-else statements.",
    "standards": "3A-AP-18",
    "agenda": "Introduction to if-else statements (15 min), Flowcharting if-else logic (10 min), Coding practice with if-else (15 min), Troubleshooting (5 min)",
    "teacherMaterials": "Lesson 4 slides (PDF).",
    "studentMaterials": "Lesson 4 slides (PDF).",
    "links": "Video Lesson. Lesson 4 slides (PDF). Bill Gates explains if-else statements.",
    "formativeAssessment": "Code Practice questions (Q1, Q2).",
    "summativeAssessment": "Unit 3 quiz, test, and coding assignment.",
    "differentiation": "Hint for Q2: use at least one if-else statement."
  },
  {
    "day": "Day 24",
    "date": "Oct 10, 2025",
    "unit": "3",
    "lesson": "3.5 Else – If",
    "enduringUnderstanding": "Sometimes you will need to allow several choices into your programs. The else-if (or elif) statement lets you accommodate those options.",
    "learningObjectives": "Define and code else-if (elif) statements. Determine when it would be appropriate to use an if statement, if-else statement, or else-if statement.",
    "standards": "3A-AP-18",
    "agenda": "Introduction to elif statements (15 min), Comparing if, if-else, and elif (10 min), Coding challenge: create a multi-condition program (15 min), Sharing solutions (5 min)",
    "teacherMaterials": "Lesson 5 slides (PDF).",
    "studentMaterials": "Lesson 5 slides (PDF).",
    "links": "Video Lesson. Lesson 5 slides (PDF). Link to EarSketch account for script.",
    "formativeAssessment": "Code Practice.",
    "summativeAssessment": "Unit 3 quiz, test, and coding assignment.",
    "differentiation": "Hint: use at least one else-if statement."
  },
    {
    "day": "Day 54",
    "date": "Dec 1, 2025",
    "unit": "6",
    "lesson": "6.2 Colors and Loops",
    "enduringUnderstanding": "By combining loops and color generation, we can create dynamic and interesting visual patterns. This lesson explores how to iterate through colors and positions to draw repetitive, colorful shapes.",
    "learningObjectives": "Use a loop to draw multiple shapes. Use random color generation within a loop to create a colorful pattern. Control the position of shapes drawn in a loop.",
    "standards": "3A-AP-18",
    "agenda": "Review of loops and drawing functions (10 min), Introduction to using loops for drawing (15 min), Guided practice: Creating a row of colored circles (15 min), Independent practice: Designing a unique pattern (5 min)",
    "teacherMaterials": "Lesson slides with examples of looped drawings.",
    "studentMaterials": "Access to a Python environment with a graphics library.",
    "links": "Video Lesson. Lesson slides. Example code for drawing patterns with loops.",
    "formativeAssessment": "Students will submit their code for a simple looped drawing and a screenshot of the output.",
    "summativeAssessment": "Unit 6 quiz, test, and coding assignment.",
    "differentiation": "Provide starter code with the loop structure already in place for students who need more support. Challenge advanced students to create nested loops for more complex patterns."
  },
  {
    "day": "Day 77",
    "date": "Jan 13, 2026",
    "unit": "9",
    "lesson": "9.1 What is a 2D List?",
    "enduringUnderstanding": "In Unit 9, we’re going to cover two-dimensional lists. We can use 2D lists to store information that is organized in a grid or a table.",
    "learningObjectives": "Define a 2D list. State the order of the row and column numbers in a 2D list address.",
    "standards": "3A-AP-18",
    "agenda": "Introduction to 2D lists (15 min), Real-world examples of data in grids (e.g., spreadsheets, game boards) (10 min), Accessing elements in a 2D list (15 min), Q&A (5 min)",
    "teacherMaterials": "Lesson 1 slides (PDF).",
    "studentMaterials": "Lesson 1 slides (PDF).",
    "links": "Video Lesson. Lesson 1 slides (PDF).",
    "formativeAssessment": "Whiteboard activity: Drawing a 2D list and labeling its indices.",
    "summativeAssessment": "Unit 9 quiz, test, and coding assignment.",
    "differentiation": "Use physical manipulatives (e.g., an ice cube tray) to represent a 2D list."
  },
  {
    "day": "Day 78",
    "date": "Jan 14, 2026",
    "unit": "9",
    "lesson": "9.2 Declaring 2D Lists",
    "enduringUnderstanding": "We'll learn how to declare a two-dimensional list.",
    "learningObjectives": "Declare a 2D list, add data to a 2D list, and access data in a 2D list.",
    "standards": "3A-AP-18",
    "agenda": "Syntax for declaring 2D lists (15 min), Practice: Creating and populating 2D lists (15 min), Common errors and debugging (10 min), Peer review of code (5 min)",
    "teacherMaterials": "Lesson 2 slides (PDF).",
    "studentMaterials": "Lesson 2 slides (PDF).",
    "links": "Video Lesson. Lesson 2 slides (PDF).",
    "formativeAssessment": "Code Practice questions (Q1, Q2).",
    "summativeAssessment": "Unit 9 quiz, test, and coding assignment.",
    "differentiation": "Provide templates for declaring 2D lists for students who struggle with the syntax."
  },
  {
    "day": "Day 79",
       "date": "Jan 15, 2026",
    "unit": "9",
    "lesson": "9.3 Loops with 2D Lists",
    "enduringUnderstanding": "We’re going to learn how to use for loops to process 2D lists. In this case, we’ll need two for loops: one to handle the rows, and one to handle the columns.",
    "learningObjectives": "Add data to, and process data in, a 2D list by using nested for loops.",
    "standards": "3A-AP-18",
    "agenda": "Introduction to nested loops for 2D lists (15 min), Guided practice: Iterating through a 2D list to print all elements (15 min), Independent practice: Performing calculations on a 2D list (10 min), Sharing solutions (5 min)",
    "teacherMaterials": "Lesson 3 slides (PDF).",
    "studentMaterials": "Lesson 3 slides (PDF).",
    "links": "Video Lesson. Lesson 3 slides (PDF).",
    "formativeAssessment": "Code Practice.",
    "summativeAssessment": "Unit 9 quiz, test, and coding assignment.",
    "differentiation": "Note: Program accounts for any size 2D lists, uses for loops."
  },
  {
    "day": "Day 80",
    "date": "Jan 16, 2026",
    "unit": "9",
    "lesson": "9.4 Algorithms with 2D Lists",
    "enduringUnderstanding": "We will code various algorithms that can work with 2D lists.",
    "learningObjectives": "Code functions which build 2D lists from given parameters, and process the data stored in 2D lists.",
    "standards": "3A-DA-12",
    "agenda": "Brainstorming algorithms for 2D lists (e.g., finding the max value, summing a column) (10 min), Pseudocoding an algorithm (10 min), Implementing the algorithm in Python (20 min), Testing and debugging (5 min)",
    "teacherMaterials": "Lesson 4 slides (PDF).",
    "studentMaterials": "Lesson 4 slides (PDF).",
    "links": "Video Lesson. Lesson 4 slides (PDF).",
    "formativeAssessment": "Code Practice.",
    "summativeAssessment": "Unit 9 quiz, test, and coding assignment.",
    "differentiation": "Note: Program accounts for any size 2D lists, uses for loops. Hints: use modulus (%) operator for divisibility by 3, use two count variables."
  },
  {
    "day": "Day 81",
    "date": "Jan 20, 2026",
    "unit": "9",
    "lesson": "9.5 Graphics and 2D Lists",
    "enduringUnderstanding": "We will look at an example of one type of information that can be stored in 2D lists: the code for colors in a digital image.",
    "learningObjectives": "Explain how pixel data for an image may be stored in a 2D list. Write code that manipulates a simple image stored in a 2D list.",
    "standards": "3A-DA-09",
    "agenda": "Introduction to representing images with 2D lists (15 min), Guided practice: Creating a simple image from a 2D list of colors (15 min), Independent practice: Modifying the image data to change the picture (10 min), Sharing creations (5 min)",
    "teacherMaterials": "Lesson slides.",
    "studentMaterials": "Lesson slides.",
    "links": "Video Lesson. Lesson slides. HTML Color Picker site.",
    "formativeAssessment": "Code Practice. Discussion: Create a Digital Image.",
    "summativeAssessment": "Unit 9 quiz, test, and coding assignment.",
    "differentiation": "Note: Program accounts for any size 2D lists, uses for loops."
  },
  {
    "day": "Day 82",
    "date": "Jan 21, 2026",
    "unit": "9",
    "lesson": "9.6 Animating with 2D Lists",
    "enduringUnderstanding": "Tracing code allows us to think through the steps in a program and predict the outcome. We will make changes to the program we looked at in the last lesson so that we can produce a simple animation.",
    "learningObjectives": "Trace code that uses a 2D list to create the effect of animation on screen.",
    "standards": "3A-CS-03",
    "agenda": "Concept of animation as a sequence of images (10 min), Using a loop to display a series of 2D list 'frames' (15 min), Guided practice: Creating a simple animation (15 min), Experimentation and sharing (5 min)",
    "teacherMaterials": "Lesson 6 slides (PDF).",
    "studentMaterials": "Lesson 6 slides (PDF).",
    "links": "Video Lesson. Lesson 6 slides (PDF). Python Tutor's visualization mode.",
    "formativeAssessment": "Code Practice. Unit 9 Vocabulary Practice (Quizlet). Unit 9 Test Review (PDF).",
    "summativeAssessment": "Assignment 9: Flight Tracker.",
    "differentiation": "Provide a set of pre-made 2D list 'frames' for students to animate."
  },
  {
    "day": "Day 83",
    "date": "Jan 22, 2026",
    "unit": "10",
    "lesson": "10.1 Debugging Logic",
    "enduringUnderstanding": "Define a series of steps to assist with the debugging process. We will practice printing variables and other information to the console to help understand how a program is running and identify problems.",
    "learningObjectives": "Locate errors in your code and debug scripts by using the print function and observing output.",
    "standards": "3A-AP-23",
    "agenda": "Introduction to debugging strategies (15 min), The 'print debugging' technique (10 min), Practice: Debugging a program with logic errors (15 min), Sharing debugging tips (5 min)",
    "teacherMaterials": "Sample code with logic errors.",
    "studentMaterials": "EarSketch Lesson 42: Debugging Logic.",
    "links": "Video: Debugging in EarSketch",
    "formativeAssessment": "Students will document their debugging process for a given buggy program.",
    "summativeAssessment": "Unit 10 coding assignment.",
    "differentiation": "Provide a checklist of common logic errors to look for."
  },
  {
    "day": "Day 84",
    "date": "Jan 23, 2026",
    "unit": "10",
    "lesson": "10.2: Evaluating Correctness",
    "enduringUnderstanding": "The idea of correct and complete code was first examined in Lesson 5.8. Now, we will further extend the concept of correctness to improve the overall conciseness and clarity of a script.",
    "learningObjectives": "Evaluate your own code and assess its completeness and correctness.",
    "standards": "3A-AP-22",
    "agenda": "Review of code correctness and completeness (10 min), Introduction to code style and readability (15 min), Peer code review activity (15 min), Reflecting on feedback (5 min)",
    "teacherMaterials": "A code style guide or rubric.",
    "studentMaterials": "EarSketch Lesson 43: Evaluating Correctness Part Two.",
    "links": "Google's Python Style Guide",
    "formativeAssessment": "Students will use a rubric to evaluate a sample piece of code.",
    "summativeAssessment": "Unit 10 coding assignment.",
    "differentiation": "Provide sentence starters to guide students in giving constructive feedback."
  },
  {
    "day": "Day 85",
    "date": "Jan 26, 2026",
    "unit": "10",
    "lesson": "10.3 Console Input and Conditionals",
    "enduringUnderstanding": "Let's add interactivity and decision making to our EarSketch programs, to make them more interesting to listeners. In this lesson, you'll see how these tools can be applied to music.",
    "learningObjectives": "Explain the use of algorithms and Booleans in programing. Use algorithms and Booleans in your EarSketch script.",
    "standards": "3A-AP-18",
    "agenda": "Introduction to console input in EarSketch (10 min), Using conditionals to control musical elements (15 min), Guided practice: Creating an interactive music piece (15 min), Sharing and experimenting (5 min)",
    "teacherMaterials": "EarSketch examples that use console input.",
    "studentMaterials": "EarSketch Lesson 44: Console Input and Conditionals.",
    "links": "EarSketch documentation on user input.",
    "formativeAssessment": "Students will create a simple EarSketch project that changes based on user input.",
    "summativeAssessment": "Unit 10 coding assignment.",
    "differentiation": "Provide a template with the basic structure for an interactive EarSketch project."
  },
  {
    "day": "Day 86",
    "date": "Jan 27, 2026",
    "unit": "10",
    "lesson": "10.4 Data Structures",
    "enduringUnderstanding": "In this lesson, we return to the concept of lists. Lists are a structure for efficiently storing data in EarSketch, especially audio clips. We'll also revisit the makeBeat() function in a new way.",
    "learningObjectives": "Explain how list operations are used in EarSketch.",
    "standards": "3A-AP-18",
    "agenda": "Review of lists (10 min), Using lists to store and sequence audio clips in EarSketch (15 min), Advanced use of the makeBeat() function with lists (15 min), Creative coding time (5 min)",
    "teacherMaterials": "EarSketch examples that use lists to manage audio.",
    "studentMaterials": "EarSketch Lesson 45: Data Structures.",
    "links": "EarSketch documentation on lists and makeBeat().",
    "formativeAssessment": "Students will create a short musical piece in EarSketch using a list of audio clips.",
    "summativeAssessment": "Unit 10 coding assignment.",
    "differentiation": "Provide a starter list of audio clips for students to work with."
  },
  {
    "day": "Day 87",
    "date": "Jan 28, 2026",
    "unit": "10",
    "lesson": "10.5 Randomness",
    "enduringUnderstanding": "Introducing randomness in music creates a sense of novelty, leading to a more improvisational feel. In this chapter, we turn some control over to the computer, allowing it to introduce elements of randomness into our music.",
    "learningObjectives": "Apply random functions to scripts in EarSketch.",
    "standards": "3A-AP-18",
    "agenda": "Introduction to randomness in music (10 min), Using random functions in EarSketch to vary musical parameters (15 min), Guided practice: Creating a generative music piece (15 min), Sharing and listening (5 min)",
    "teacherMaterials": "Examples of generative music.",
    "studentMaterials": "EarSketch Lesson 47: Randomness.",
    "links": "EarSketch documentation on random functions.",
    "formativeAssessment": "Students will create an EarSketch project that uses randomness to generate a different musical output each time it is run.",
    "summativeAssessment": "Unit 10 Assignment: Create a Song of the Summer.",
    "differentiation": "Provide a range of random functions for students to explore, from simple to more complex."
  },
  {
    "day": "Day 88",
    "date": "Jan 29, 2026",
    "unit": "11",
    "lesson": "11.1 What is the Internet?",
    "enduringUnderstanding": "We will move away from Python and explore the world of the internet. You’ll learn the rules that govern the internet and keep it running.",
    "learningObjectives": "Explain how bits of data are sent over the internet using copper wires, fiber optic cable, and radio waves.",
    "standards": "3A-NI-04",
    "agenda": "Introduction to the physical infrastructure of the internet (20 min), Video on how data travels across the internet (10 min), Discussion and Q&A (15 min)",
    "teacherMaterials": "Lesson 2 slides. Map of undersea internet cables.",
    "studentMaterials": "Lesson 2 slides.",
    "links": "Video Lesson. Lesson 2 slides. ipLOCATION tool to find IP address.",
    "formativeAssessment": "Draw a diagram showing how a piece of data might travel from their computer to a server across the world.",
    "summativeAssessment": "Unit 11 quiz, test, and coding assignment.",
    "differentiation": "Use analogies like the postal service to explain the concepts."
  },
  {
    "day": "Day 89",
    "date": "Jan 30, 2026",
    "unit": "11",
    "lesson": "11.3 Packets and Routers",
    "enduringUnderstanding": "Lesson 11.3, Packets and Routers, provides insight on how communication between systems is accomplished using packetized information and the way this information is routed through the internet.",
    "learningObjectives": "Explain how data is split into packets, routed to its intended location, and reassembled and verified when received.",
    "standards": "3A-NI-04",
    "agenda": "Introduction to packets and routers (15 min), Activity: Simulating packet switching with a hands-on game (20 min), Discussion on the benefits of packet switching (10 min)",
    "teacherMaterials": "Lesson 3 slides. Materials for the packet switching game (e.g., envelopes, messages, 'routers').",
    "studentMaterials": "Lesson 3 slides.",
    "links": "Video Lesson. Lesson 3 slides.",
    "formativeAssessment": "Explain the concept of a packet in their own words.",
    "summativeAssessment": "Unit 11 quiz, test, and coding assignment.",
    "differentiation": "Provide a visual aid that shows a message being broken down into packets and reassembled."
  },
  {
    "day": "Day 90",
    "date": "Feb 2, 2026",
    "unit": "11",
    "lesson": "11.4 Making Web Pages – HTML Part 1",
    "enduringUnderstanding": "We'll be learning how to make web pages. Create the structure of a web page using HTML.",
    "learningObjectives": "Write a simple web page using HTML. Be able to explain how HTTP is used to send HTML documents across the internet.",
    "standards": "3A-NI-04",
    "agenda": "Introduction to HTML and its basic tags (20 min), Guided practice: Creating a simple 'About Me' webpage (20 min), Introduction to HTTP (5 min)",
    "teacherMaterials": "Lesson 4 slides. A simple text editor.",
    "studentMaterials": "A text editor and a web browser.",
    "links": "Video Lesson. Lesson 4 slides. W3Schools HTML tutorials (Introduction, Editors, Basic Examples, Attributes, Headings, Paragraphs).",
    "formativeAssessment": "Code Practice.",
    "summativeAssessment": "Unit 11 quiz, test, and coding assignment.",
    "differentiation": "Caution for double closing tags."
  },
  {
    "day": "Day 91",
    "date": "Feb 3, 2026",
    "unit": "11",
    "lesson": "11.5 Making Web Pages – HTML Part 2",
    "enduringUnderstanding": "Now that we can create basic text on a web page, we will make this text look a bit more interesting, by editing the format of the text - using italics, bolding, different colors, and more!",
    "learningObjectives": "Format content on a webpage using HTML tags and stylesheets.",
    "standards": "3A-AP-18",
    "agenda": "Introduction to text formatting tags (e.g., <b>, <i>) (15 min), Introduction to CSS for styling (15 min), Guided practice: Styling the 'About Me' page (15 min)",
    "teacherMaterials": "Lesson 5 slides.",
    "studentMaterials": "Their 'About Me' HTML file from the previous lesson.",
    "links": "Video Lesson. Lesson 5 slides. W3Schools HTML tutorials (Styles, Formatting, CSS, Links).",
    "formativeAssessment": "Code Practice.",
    "summativeAssessment": "Unit 11 quiz, test, and coding assignment.",
    "differentiation": "Caution for double closing tags."
  },
  {
    "day": "Day 92",
    "date": "Feb 4, 2026",
    "unit": "11",
    "lesson": "11.6 Making Web Pages – HTML Part 3",
    "enduringUnderstanding": "Lesson 6: Making Web Pages - HTML Part 3 is the last in our three-part discovery of how web pages are constructed.",
    "learningObjectives": "Create web pages using HTML that incorporate images. Explain several cybersecurity threats and how to protect yourself from them. Be able to state how encryption is used to transfer data securely on the internet.",
    "standards": "3A-NI-05",
    "agenda": "Adding images to a webpage (15 min), Introduction to cybersecurity threats (e.g., phishing, malware) (15 min), Discussion on encryption and online safety (15 min)",
    "teacherMaterials": "Lesson 7 slides.",
    "studentMaterials": "Lesson 7 slides.",
    "links": "Video Lesson. Lesson 7 slides.",
    "formativeAssessment": "Add an image to their 'About Me' webpage.",
    "summativeAssessment": "Unit 11 quiz, test, and coding assignment.",
    "differentiation": "Provide a list of safe and royalty-free image websites."
  },
  {
    "day": "Day 93",
    "date": "Feb 5, 2026",
    "unit": "11",
    "lesson": "11.8 Net Neutrality",
    "enduringUnderstanding": "We will explore the much-discussed principle of net neutrality, and look at arguments both for and against net neutrality.",
    "learningObjectives": "Explain the principle of net neutrality. State arguments for and against net neutrality.",
    "standards": "3A-IC-28",
    "agenda": "Introduction to net neutrality (15 min), Video explaining the debate (10 min), Class debate: For and against net neutrality (20 min)",
    "teacherMaterials": "Lesson 8 slides. Articles or videos presenting both sides of the net neutrality argument.",
    "studentMaterials": "Lesson 8 slides.",
    "links": "Video Lesson. Lesson 8 slides. Hank vs. Hank video on net neutrality.",
    "formativeAssessment": "Unit 11 Vocabulary Practice (Quizlet). Unit 11 Test Review (PDF).",
    "summativeAssessment": "Assignment 11: Build Your Own Webpage.",
    "differentiation": "Provide a graphic organizer to help students organize the arguments for and against net neutrality."
  },
  {
    "day": "Day 94",
    "date": "Feb 6, 2026",
    "unit": "12",
    "lesson": "12.1 What Is a Dictionary?",
    "enduringUnderstanding": "We’ll learn about a new type of variable called a dictionary.",
    "learningObjectives": "Explain what a dictionary is in programming. Write a simple Python program that stores information in a dictionary.",
    "standards": "3A-AP-18",
    "agenda": "Introduction to dictionaries (key-value pairs) (15 min), Analogy to a real-world dictionary (10 min), Practice: Creating and accessing data in a dictionary (15 min), Discussion: When to use a dictionary vs. a list (5 min)",
    "teacherMaterials": "Examples of data that would be well-suited for a dictionary.",
    "studentMaterials": "Official Python documentation for dictionaries.",
    "links": "Video Lesson on Python Dictionaries",
    "formativeAssessment": "Code Practice.",
    "summativeAssessment": "Assignment 12: Word Frequency Analysis.",
    "differentiation": "Provide a fill-in-the-blank template for creating a dictionary."
  },
  {
    "day": "Day 95",
    "date": "Feb 9, 2026",
    "unit": "12",
    "lesson": "12.2 Dictionary Methods",
    "enduringUnderstanding": "We'll learn about the methods that work on dictionaries. We'll also find out how to write our own functions which use dictionaries as parameters and/or return dictionaries.",
    "learningObjectives": "Understand how a variety of methods for dictionaries in Python work and write code using these methods. Use dictionaries when writing your own functions in Python. Iterate through the keys of a dictionary and use these to access items.",
    "standards": "3A-AP-18",
    "agenda": "Introduction to common dictionary methods (e.g., .keys(), .values(), .items()) (15 min), Guided practice: Using dictionary methods (15 min), Passing dictionaries to functions (10 min), Creative coding with dictionaries (5 min)",
    "teacherMaterials": "A cheat sheet of dictionary methods.",
    "studentMaterials": "Official Python documentation for dictionaries. Python documentation on Membership Test Operations (in/not in statements). Official Python documentation for dictionaries.",
    "links": "W3Schools Python Dictionary Methods",
    "formativeAssessment": "Code Practice questions (Q1, Q2, Q3, Q Iterate through the keys of a dictionary and use these to access items). Code Practice questions (Q1, Q2, Q3).",
    "summativeAssessment": "Assignment 12: Word Frequency Analysis.",
    "differentiation": "Provide worked examples for each dictionary method."
  }
];