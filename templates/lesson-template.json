{
  "lessonTemplate": {
    "day": "[Day number - e.g., 1, 2, 3...]",
    "date": "[Date format - e.g., 'Mon, 09 08, 25']",
    "lesson": "[Lesson title - descriptive and engaging]",
    "enduringUnderstanding": "[Core concept students should remember long-term]",
    "essentialQuestion": "[Thought-provoking question that guides the lesson]",
    "objectives": [
      "[Learning objective 1 - what students will be able to do]",
      "[Learning objective 2 - specific and measurable]",
      "[Learning objective 3 - aligned with standards]"
    ],
    "agenda": "[Time-based agenda - e.g., '(5m) Do Now: Review homework (20m) Mini-Lesson: New concept (45m) Guided Practice: Hands-on activity (10m) Exit Ticket: Quick assessment']",
    "materials": {
      "teacher": "[What the teacher needs - resources, tools, handouts]",
      "student": "[What students need - supplies, devices, worksheets]",
      "links": "[Online resources, websites, video links]"
    },
    "assessment": {
      "formative": "[How you'll check understanding during the lesson]",
      "summative": "[How you'll evaluate learning at the end]"
    },
    "differentiation": "[Support: How you'll help struggling students] [Challenge: How you'll extend learning for advanced students]"
  },
  
  "exampleLesson": {
    "day": 1,
    "date": "Mon, 09 08, 25",
    "lesson": "Introduction to Computer Science Concepts",
    "enduringUnderstanding": "Computer science is about problem-solving and creating solutions that can help people.",
    "essentialQuestion": "How do computer scientists approach and solve real-world problems?",
    "objectives": [
      "Students will be able to define computer science and identify its core principles",
      "Students will be able to describe the problem-solving process used in computer science",
      "Students will be able to identify examples of computer science in everyday life"
    ],
    "agenda": "(5m) Do Now: List 3 ways you use technology daily (15m) Mini-Lesson: What is Computer Science? (25m) Guided Practice: Problem-solving scenarios (10m) Share Out: Real-world CS examples (5m) Exit Ticket: Reflection on CS problem-solving",
    "materials": {
      "teacher": "Presentation slides, scenario cards, timer, whiteboard markers",
      "student": "Notebook, pen/pencil, scenario worksheet",
      "links": "CS problem-solving video: https://example.com/cs-intro"
    },
    "assessment": {
      "formative": "Observe student discussions during scenarios, check Do Now responses",
      "summative": "Exit ticket reflection on problem-solving steps"
    },
    "differentiation": "Support: Provide sentence starters for discussions, pair struggling students with partners. Challenge: Ask advanced students to create their own problem-solving scenarios."
  },
  
  "fieldDescriptions": {
    "day": "Sequential lesson number within the unit",
    "date": "When the lesson will be taught (format: Day, MM DD, YY)",
    "lesson": "Clear, descriptive title for the lesson",
    "enduringUnderstanding": "The big idea or concept students should retain long after the lesson",
    "essentialQuestion": "An open-ended question that drives inquiry and thinking",
    "objectives": "Specific, measurable learning goals (use action verbs like 'identify', 'explain', 'create')",
    "agenda": "Time-blocked schedule of lesson activities with estimated durations",
    "materials": {
      "teacher": "Resources and materials the instructor needs",
      "student": "What learners need to participate",
      "links": "Digital resources, websites, videos, or online tools"
    },
    "assessment": {
      "formative": "Ongoing checks for understanding during the lesson",
      "summative": "End-of-lesson evaluation of learning"
    },
    "differentiation": "Strategies to support diverse learners (both support for struggling students and challenges for advanced students)"
  }
}
